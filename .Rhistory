getwd()
url <- "https://archive.ics.uci.edu/ml/machine-learning-databases/el_nino-mld/elnino.gz"
?download.file()
url <- "https://archive.ics.uci.edu/ml/machine-learning-databases/el_nino-mld/elnino.gz"
download.file(url, "elnino_data_gz.gz")
read.table("elnino_data_gz.gz")
gz <- read.table("elnino_data_gz.gz")
str(gz)
summary(gz)
colnames(gz) <- c("date", "latitude", "longitude", "zonal winds", "meridional winds" , "humidity", "air_temperature", "sea_surface_temp", "sea_subsurface_temp")
summary(gz)
colnames(gz) <- c("date", "latitude", "longitude", "zonal_winds", "meridional_winds" , "humidity", "air_temperature", "sea_surface_temp", "sea_subsurface_temp")
summary(gz)
str(gz)
indx <- sapply(gz, is.factor)
indx
gz[indx] <- lapply(gz[indx], function(x) as.numeric(as.character(x)))
str(gz)
summary(gz)
library(dplyr)
library(lubridate)
gz$date <- as_date(gz$date)
str(gz)
summary(gz)
url2 <- "https://archive.ics.uci.edu/ml/machine-learning-databases/el_nino-mld/tao-all2.dat.gz"
tao <- read.table("tao_all.gz")
url2 <- "https://archive.ics.uci.edu/ml/machine-learning-databases/el_nino-mld/tao-all2.dat.gz"
download.file(url2, "tao_all.gz")
tao <- read.table("tao_all.gz")
str(tao)
colnames(gz) <- c("buoy",
"day",
"latitude",
"longitude",
"zon.winds",
"mer.winds",
"humidity",
"air_temp",
"sea_temp")
colnames(tao) <- c("obs",
"year",
"month",
"day",
"date",
"latitude",
"longitude",
"zon.winds",
"mer.winds",
"humidity",
"air_temp",
"sea_temp")
indx <- sapply(tao, is.factor)
indx
tao[indx] <- lapply(tao[indx], function(x) as.numeric(as.character(x)))
str(tao)
summary(tao)
tao$year2 = as.character(tao$year)
library(stringr)
tao$year2 <- str_pad(as.character(tao$year), 4, side = "left", "19")
as.character(tao$year)
tao$year2 <- str_pad(as.character(tao$year), width = 4, side = "left", pad = "19")
tao$year2 = as.character(tao$year)
tao$year2 <- str_pad(tao$year2, width = 4, side = "left", pad = "19")
tao$year2 <- str_pad(tao$year2, width = 3, side = "left", pad = "9")
tao$year2 <- str_pad(tao$year2, width = 4, side = "left", pad = "1")
tao$year2
tao$year2 <- as_year(tao$year2)
tao$year2 <- as_date(tao$year2)
tao$year2 <- as.integer(tao$year2)
str(tao)
summary(tao)
library(ggmap)
install.packages("ggmap")
library(ggmap)
base_world = get_map(location = "world",maptype="hybrid")
ggmap(base_world)
?ggproto
install.packages("ggplot2")
install.packages("ggplot2")
library(ggplot2)
base_world = get_map(location = "world",maptype="hybrid")
?get_map
??get_map
library(ggmap)
library(dplyr)
library(lubridate)
library(stringr)
library(ggmap)
library(ggplot2)
temp <- tempfile()
base_world = get_map(location = "world",maptype="hybrid")
ggmap(base_world)
devtools::install_github("dkahle/ggmap")
devtools::install_github("hadley/ggplot2")
library(dplyr)
library(lubridate)
library(stringr)
library(ggmap)
library(ggplot2)
url <- "https://archive.ics.uci.edu/ml/machine-learning-databases/el_nino-mld/elnino.gz"
url2 <- "https://archive.ics.uci.edu/ml/machine-learning-databases/el_nino-mld/tao-all2.dat.gz"
base_world = get_map(location = "world",maptype="hybrid")
ggmap(base_world)
tao <- read.table("tao_all.gz")
str(tao)
summary(tao)
colnames(tao) <- c("obs",
"year",
"month",
"day",
"date",
"latitude",
"longitude",
"zon.winds",
"mer.winds",
"humidity",
"air_temp",
"sea_temp")
indx <- sapply(tao, is.factor)
indx
tao[indx] <- lapply(tao[indx], function(x) as.numeric(as.character(x)))
str(tao)
summary(tao)
tao$date <- as_date(tao$date)
tao$year2 = as.character(tao$year)
tao$year2 <- str_pad(tao$year2, width = 3, side = "left", pad = "9")
tao$year2 <- str_pad(tao$year2, width = 4, side = "left", pad = "1")
tao$year2 <- as.integer(tao$year2)
library(dplyr)
library(lubridate)
library(stringr)
library(ggmap)
library(ggplot2)
tao$date <- as_date(tao$date)
tao$year2 = as.character(tao$year)
tao$year2 <- str_pad(tao$year2, width = 3, side = "left", pad = "9")
tao$year2 <- str_pad(tao$year2, width = 4, side = "left", pad = "1")
tao$year2 <- as.integer(tao$year2)
base_world = get_map(location = "world",maptype="hybrid")
ggmap(base_world)
base_world +
geom_point(data=tao,
aes(x=longitude, y=latitude), colour="Deep Pink",
fill="Pink",pch=21, size=5, alpha=I(0.7))
str(tao)
map_data <-
base_world +
geom_point(data=tao,
aes(x=longitude, y=latitude), colour="Deep Pink",
fill="Pink",pch=21, size=5, alpha=I(0.7))
base_world +
geom_point(data=tao,
aes(x=longitude, y=latitude))
??base_world
?base_world
library(maps)
world_map <- map_data("world")
map_data <-
base_world +
geom_point(data=tao,
aes(x=longitude, y=latitude))
mp <- NULL
mapWorld <- borders("world", colour="gray50", fill="gray50") # create a layer of borders
mp <- ggplot() +   mapWorld
mp
mp+ geom_point(data = tao, aes(x=longitude, y=latitude) ,color="blue", size=3)
url <- "https://data.police.uk/data/fetch/29430c1e-1375-4482-abfc-ac0570b73df5/"
download.file(url, "police_test.csv")
tao <- read.csv("police_test.csv")
str(tao)
tao
?sprintf
sprintf ('dir%i/f1.csv', 1:10)
sprintf ('essex_data/2016-%i/%i-essex-street.csv', 1:12)
file.paths <- sprintf ('essex_data/2016-%i/2016-%i-essex-street.csv', 1:12)
sprintf('essex_data/2016-%i/2016-%i-essex-street.csv', 1:12)
?sprintf
sprintf('essex_data/2016-%i/2016-%i-essex-street.csv', 1:10)
sprintf ('essex_data/2016-%i/2016-%i-essex-street.csv', 1:10)
sprintf ('dir%i/f1.csv', 1:10)
sprintf ('essex_data/2016-%i-essex-street.csv', 1:10)
getwd()
?expand.grid
essex_dates <- function(year, month_start, month_end){
chr <- rep(0, month_stop - (month_start + 1))
month_s <- str_pad(month_start, width = 2, side = "left", pad = 0)
month_e <- str_pad(month_end, width = 2, side = "left", pad = 0)
seq <- month_s:month_e
chr <- expand.grid(year, seq)
chr
}
essex_dates(2016, 1, 12)
essex_dates <- function(year, month_start, month_end){
chr <- rep(0, month_end - (month_start + 1))
month_s <- str_pad(month_start, width = 2, side = "left", pad = 0)
month_e <- str_pad(month_end, width = 2, side = "left", pad = 0)
seq <- month_s:month_e
chr <- expand.grid(year, seq)
chr
}
essex_dates(2016, 1, 12)
Sys.glob ('dir*/*f*.csv')
file.paths <- Sys.glob ('2016*/*essex-street.csv')
test <- lapply(file.paths, read.csv)
str(test)
file.paths <- Sys.glob('2016-*/*essex-street.csv')
test <- lapply(file.paths, read.csv)
str(test)
file.paths <- Sys.glob('2016-*/*-essex-street.csv')
test <- lapply(file.paths, read.csv)
str(test)
?Sys.glob
file.paths <- Sys.glob(file.path('2016-', '*', 'essex-street.csv'))
test <- lapply(file.paths, read.csv)
str(test)
??dir
??dir()
getwd()
path <- file.path('~', 'essex_police_data')
path
dirs(path)
library(fda)
dirs(path)
dir(pattern = "*.csv")
dir(path, pattern = "*.csv")
path <- file.path('~', 'essex_police_data', '/')
path
path <- file.path('~', 'essex_police_data', '')
path
dir(path, pattern = "*.csv")
setwd(path)
dir("~/essex_police_data/", pattern = "*.csv")
dir("./essex_police_data/", pattern = "*.csv")
files <-
dir("/essex_police_data/", recursive=TRUE, full.names=TRUE, pattern="\\.csv$")
files
getwd()
list.files(recursive = T)
list.files(recursive = T, pattern = "*.csv")
police_data <- do.call(rbind,lapply(files, read.csv))
str(police_data)
library(data.table)
temp <- lapply(files, fread, sep=",")
data <- rbindlist( temp )
str(data)
files2 <- dir(recursive = T, pattern = "*.csv")
files2
files <- list.files(recursive = T, pattern = "*.csv")
files
files2 <- dir(recursive = T, pattern = "*.csv", full.names=TRUE,)
files2 <- dir(recursive = T, pattern = "*.csv", full.names=TRUE)
files2
police_data <- do.call(rbind,lapply(files2, read.csv))
files2 <- dir(recursive = T, pattern = "*.csv", full.names=TRUE)
files2
police_data <- do.call(rbind,lapply(files2, read.csv))
str(police_data)
files <- dir(recursive = T, pattern = "*.csv", full.names=TRUE)
police_data <- do.call(rbind,lapply(files, read.csv))
str(police_data)
str(police_data)
essex_sh <- readShapeSpatial("Essex_County_Parcels_2015.shp")
??readShapeSpatial
?readShapeSpatial
library(maptools)
install.packages("maptools")
library(maptools)
?readShapeSpatial
essex_sh <- readShapeSpatial("Essex_County_Parcels_2015.shp")
require(rgdal)
install.packages("rgdal")
library(rgdal)
essex_sh <- readOGR(dsn = ".", layer = "Essex_County_Parcels_2015.shp")
?readOGR
essex_sh <- readOGR(dsn = ".", layer = "Essex_County_Parcels_2015.shp")
essex_lon = c(min(map_data$Longitude), max(map_data$Longitude))
map_data <- police_data %>%
select(Month, Longitude, Latitude, Crime.type)
map_data$Longitude
min(map_data$Longitude)
essex_lon = c(min(map_data$Longitude, na.rm = TRUE), max(map_data$Longitude, na.rm = TRUE))
summary(map_data)
essex_lon = c(min(map_data$Longitude, na.rm = TRUE), max(map_data$Longitude, na.rm = TRUE))
essex_lat = c(min(map_data$Latitude, na.rm = TRUE), max(map_data$Latitude, na.rm = TRUE))
essex_map = get_map(location = c(lon = mean(essex_lon), lat = mean(essex_lat)), #'Barcelona',
maptype="hybrid",  zoom = 12)
ggmap(essex_map)
?get_map
library(ggmap)
essex_map = get_map(location = c(lon = mean(essex_lon), lat = mean(essex_lat)), #'Barcelona',
maptype="hybrid",  zoom = 12)
essex_map = get_map(location = c(lon = mean(essex_lon), lat = mean(essex_lat)))
